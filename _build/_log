### Starting build.
# Target: engine.mli.depends, tags: { package(graphics), package(unix), extension:mli, file:engine.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package unix -package graphics -modules engine.mli > engine.mli.depends # cached
# Target: state.mli.depends, tags: { package(graphics), package(unix), extension:mli, file:state.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package unix -package graphics -modules state.mli > state.mli.depends # cached
# Target: state.cmi, tags: { package(graphics), package(unix), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -package unix -package graphics -o state.cmi state.mli # cached
# Target: engine.cmi, tags: { package(graphics), package(unix), byte, compile, extension:mli, file:engine.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -package unix -package graphics -o engine.cmi engine.mli # cached
# Target: engine.ml.depends, tags: { package(graphics), package(unix), extension:ml, file:engine.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package unix -package graphics -modules engine.ml > engine.ml.depends # cached
# Target: engine.cmo, tags: { package(graphics), package(unix), byte, compile, extension:cmo, extension:ml, file:engine.cmo, file:engine.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package unix -package graphics -o engine.cmo engine.ml # cached
# Target: state.ml.depends, tags: { package(graphics), package(unix), extension:ml, file:state.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -package unix -package graphics -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(graphics), package(unix), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -package unix -package graphics -o state.cmo state.ml # cached
# Target: engine.byte, tags: { package(graphics), package(unix), byte, dont_link_with, extension:byte, file:engine.byte, link, ocaml, program, quiet }
ocamlfind ocamlc -linkpkg -package unix -package graphics state.cmo engine.cmo -o engine.byte # cached
# Compilation successful.
